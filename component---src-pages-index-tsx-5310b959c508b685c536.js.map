{"version":3,"file":"component---src-pages-index-tsx-5310b959c508b685c536.js","mappings":"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","sources":["webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-NEK3OOAM.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/card/dist/chunk-HAZMUPV3.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/card/dist/chunk-YQO7BFFX.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/card/dist/chunk-2EW3JUUD.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","webpack://gatsby-starter-chakra-ui-type-script/./src/pages/index.tsx"],"sourcesContent":["'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-NEK3OOAM.mjs.map","'use client'\n\n// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n//# sourceMappingURL=chunk-HAZMUPV3.mjs.map","'use client'\nimport {\n  CardStylesProvider\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n//# sourceMappingURL=chunk-YQO7BFFX.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n//# sourceMappingURL=chunk-2EW3JUUD.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","import {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Heading,\n  SimpleGrid,\n  Stack,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport Footer from \"../components/Footer\";\nimport Nav from \"../components/Nav\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const { toggleColorMode } = useColorMode();\n  return (\n    <>\n      <Nav />\n      <Container maxW={\"6xl\"} as=\"main\" py={10}>\n        <Stack spacing={10}>\n          <SimpleGrid columns={{ sm: 1, md: 2 }} spacing={5}>\n            <Card>\n              <CardHeader>\n                <Heading size=\"lg\">In the Lands of the North...</Heading>\n              </CardHeader>\n              <CardBody>\n                <Stack spacing={10}>\n                  <Text>\n                    ...where the black rocks stand guard against the cold sea,\n                    in the dark night that is very long, the men of the\n                    Northlands sit by their great log fires and they tell a\n                    tale...\n                  </Text>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <StaticImage src=\"../images/people.jpg\" alt=\"The People\" />\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <Heading size=\"lg\">Who is Nogbad The Bad?</Heading>\n              </CardHeader>\n              <CardBody>\n                <Stack spacing={10}>\n                  <Text>\n                    Nogbad the Bad is the archetypal wicked uncle. Just not a\n                    very nice person generally.\n                  </Text>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <StaticImage src=\"../images/nogbad.jpg\" alt=\"Nogbad\" />\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <Heading size=\"lg\">What does Nogbad want?</Heading>\n              </CardHeader>\n              <CardBody>\n                <Stack spacing={10}>\n                  <Text>\n                    He is obsessed with ambition to regain the crown of the\n                    Northlands.\n                  </Text>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <StaticImage\n                      src=\"../images/northlands.jpg\"\n                      alt=\"Northlands\"\n                    />\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <Heading size=\"lg\">Why does he want the crown?</Heading>\n              </CardHeader>\n              <CardBody>\n                <Stack spacing={10}>\n                  <Text>\n                    In his view The Northlands was wrongly given to his\n                    worthless nephew, Noggin.\n                  </Text>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <StaticImage src=\"../images/noggin.jpg\" alt=\"Noggin\" />\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <Heading size=\"lg\">What's Nogbad's plan?</Heading>\n              </CardHeader>\n              <CardBody>\n                <Stack spacing={10}>\n                  <Stack spacing={2}>\n                    <Text>\n                      His life is spent in his castle devising ingeniously evil\n                      schemes to steal the crown, or force Noggin to give it up.\n                    </Text>\n                  </Stack>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <StaticImage\n                      src=\"../images/badcast.jpg\"\n                      alt=\"Nogbad's castle\"\n                    />\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <Heading size=\"lg\">Does it work?</Heading>\n              </CardHeader>\n              <CardBody>\n                <Stack spacing={10}>\n                  <Stack spacing={2}>\n                    <Text>\n                      No. He never succeeds and we never get tired of watching\n                      him fail.\n                    </Text>\n                    <Text>\n                      Sometimes he dies. But comes back the next episode only to\n                      try again.\n                    </Text>\n                  </Stack>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <StaticImage\n                      src=\"../images/nogbad2.gif\"\n                      alt=\"Nogbad\"\n                    />\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n          </SimpleGrid>\n        </Stack>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n"],"names":["Grid","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css","displayName","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","width","value","_value","n","widthToColumns","count","CardStylesProvider","useCardStyles","Card","className","children","direction","justify","align","cx","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","CardHeader","header","CardBody","body","IndexPage","toggleColorMode","useColorMode","React","Nav","Container","maxW","as","py","Stack","sm","md","Heading","size","Text","Box","StaticImage","src","alt","__imageData","require","Footer","Head"],"sourceRoot":""}